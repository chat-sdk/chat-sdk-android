apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        applicationId "sdk.chat.android.xmpp"
//        manifestPlaceholders += [applicationId: "sdk.chat.android.xmpp"]

        multiDexEnabled = true
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdk Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)


        versionName CHAT_SDK_VERSION
        versionCode CHAT_SDK_BUILD_NUMBER as int
    }

    signingConfigs {
        release {
            storeFile file('release-key.keystore')
            keyAlias 'release_key'
            storePassword 'ChatSDK123xx!'
            keyPassword 'ChatSDK123xx!'
        }
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'D3bug123'
            storeFile file('debug.keystore')
            storePassword 'D3bug123'
        }
    }

    if(project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnabled = false
    }

    buildTypes {
        release {
            minifyEnabled project.hasProperty('minifyRelease')
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
        }
        debug {
            minifyEnabled project.hasProperty('minifyDebug') && minifyDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'

            debuggable true
            jniDebuggable true
            ext.alwaysUpdateBuildId = false
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module']
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        lintConfig file('lint.xml')
    }
    namespace 'sdk.chat.demo.xmpp'

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(':chat-sdk-app-xmpp')
    implementation project(':chat-sdk-pro-xmpp-read-receipts')

    api project(':chat-sdk-pro-message-audio')
//    implementation('sdk.chat:chat-sdk-pro-message-audio:5.5.3')
//    api "sdk.chat:pro-message-audio:5.5.0"

    api project(':chat-sdk-pro-message-sticker')
    api project(':chat-sdk-pro-message-file')
    api project(':chat-sdk-pro-message-video')
    api project(':chat-sdk-pro-encryption')

    implementation 'androidx.security:security-crypto:1.0.0'

//    configurations.all {
//        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//            if (details.requested.group + ":" + details.requested.name == 'chat-sdk-core') {
//                details.useVersion "5.5.2"
//                //details.useTarget "com.google.guava:guava:15.0:cdi1.0"
//            }
//        }
//    }
}


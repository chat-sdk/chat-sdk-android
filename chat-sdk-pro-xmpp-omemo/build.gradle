plugins {
    id 'com.android.library'

    id 'maven-publish'
    id 'signing'
    id 'kotlin-android'
}

android {

    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK)

    }

    buildTypes {
        debug {
            minifyEnabled project.hasProperty('minifyDebug') && minifyDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.txt', 'proguard-rules.txt'
        }
        release {
            minifyEnabled project.hasProperty('minifyRelease') && minifyRelease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.txt', 'proguard-rules.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_21.toString()
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        lintConfig file('lint.xml')
    }
    namespace 'sdk.chat.xmpp.omemo'

}

dependencies {

    implementation project(':chat-sdk-pro-xmpp-adapter')
    implementation project(':chat-sdk-core-ui')

    api "org.igniterealtime.smack:smack-omemo:$smackVersion"
//    implementation "org.igniterealtime.smack:smack-omemo-signal:$smackVersion"

    implementation("org.igniterealtime.smack:smack-omemo-signal:$smackVersion") {
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }
}

ext {
    libraryName = 'XMPPOMEMO'
    artifact = 'pro-xmpp-omemo'
    libraryDescription = 'XMPP OMEMO'
}
